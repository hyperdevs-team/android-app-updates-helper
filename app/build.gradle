/*
 * Copyright (C) 2021 HyperDevs
 *
 * Copyright (C) 2019 BQ
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: "com.android.application"

apply plugin: "kotlin-android"

apply plugin: "com.gladed.androidgitversion"

apply from: "$rootDir/gradle/properties_utils.gradle"

ext {
    /*
     ********************
     * Android variables
     ********************
     */
    compile_sdk_version = 34
    min_sdk_version = 21
    target_sdk_version = 34
    build_tools_version = "34.0.0"
}

android {
    compileSdkVersion compile_sdk_version
    buildToolsVersion build_tools_version

    defaultConfig {
        /*
         * Change your application ID to the app you want to test with
         *
         * Requires configuration via app_config.properties file or injected via environment variables.
         * The loadEnvOrProperty will try to find the environment variable (in snake_case) or the
         * property in signing.properties (converted to camelCase)
         */
        applicationId loadEnvOrProperty("APPLICATION_ID", "/", "app_config.properties")
        minSdkVersion min_sdk_version
        targetSdkVersion target_sdk_version
        versionCode 1
        versionName androidGitVersion.name()
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildFeatures {
        viewBinding true
    }

    signingConfigs {
        /*
         * Local release signing configuration
         *
         * Requires configuration via app_config.properties file or injected via environment variables.
         * The loadEnvOrProperty will try to find the environment variable (in snake_case) or the
         * property in signing.properties (converted to camelCase)
         */
        localRelease {
            storeFile file(loadEnvOrProperty("KEYSTORE_PATH", "/", "app_config.properties"))
            storePassword loadEnvOrProperty("KEYSTORE_PWD", "", "app_config.properties")
            keyAlias loadEnvOrProperty("KEYSTORE_ALIAS", "", "app_config.properties")
            keyPassword loadEnvOrProperty("KEYSTORE_ALIAS_PWD", "", "app_config.properties")
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.localRelease
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro"
            signingConfig signingConfigs.localRelease
        }
    }

    sourceSets.configureEach {
        java.srcDirs += "src/${name}/kotlin"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }
}

dependencies {
    implementation project(":lib")
    implementation fileTree(dir: "libs", include: ["*.jar"])

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    implementation "androidx.appcompat:appcompat:1.6.1"
    implementation "androidx.core:core-ktx:1.10.1"
    implementation "androidx.constraintlayout:constraintlayout:2.1.4"

    testImplementation "junit:junit:4.13.2"

    androidTestImplementation "androidx.test:runner:1.5.2"
    androidTestImplementation "androidx.test.espresso:espresso-core:3.5.1"
    implementation "com.google.android.material:material:1.9.0"
}
